name: Rust

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: "1.57.0"

jobs:
  lint:
    name: Clippy/Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v1
      - run: cargo fmt -- --check
      - run: cargo clippy --all-targets -- --deny=warnings

  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt, clippy
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1
      - run: cargo check

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v1
      - run: cargo test

  doc:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt, clippy
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1
      - run: cargo doc

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: nightly-2022-01-26
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: "0.19.1"
          run-types: Tests,Doctests

      - name: Upload to Codecov.io
        uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: cobertura.xml
- ad: Önbellek
  kullanımlar: eylemler/önbellek@v3.3.2
  ile:
    # Önbelleğe alınacak ve geri yüklenecek dosya, dizin ve joker karakter kalıplarının listesi
    yol:
    # Önbelleği geri yüklemek ve kaydetmek için açık bir anahtar
    anahtar:
    # Anahtar için önbellek isabeti oluşmaması durumunda eski önbelleği geri yüklemek için kullanılacak anahtarların sıralı listesi. Not: 'önbellek isabeti' bu durumda false değerini döndürür.
    geri yükleme anahtarları: # isteğe bağlı
    # Yükleme sırasında büyük dosyaları bayt cinsinden bölmek için kullanılan yığın boyutu
    upload-chunk-size: # isteğe bağlı
    # Etkinleştirildiğinde isteğe bağlı bir boole, Windows çalıştırıcılarının sırasıyla diğer platformlarda geri yüklenebilecek veya kaydedilebilecek önbellekleri kaydetmesine veya geri yüklemesine olanak tanır
    activeCrossOsArchive: # isteğe bağlı, varsayılan değer false
    # Önbellek girişi bulunamazsa iş akışı başarısız olur
    önbellekte başarısızlık: # isteğe bağlı, varsayılan yanlıştır
    # Önbelleği indirmeden, verilen giriş(ler) için (anahtar, geri yükleme anahtarları) bir önbellek girişinin olup olmadığını kontrol edin
    salt arama: # isteğe bağlı, varsayılan değer false'tur
